<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<!-- declare "%sEx" as a conversion rule usCustomThrowableConverterWithHashHash -->
	<conversionRule conversionWord="hEx" converterClass="com.orange.common.logging.logback.CustomThrowableConverterWithHash">
	</conversionRule>

	<appender name="STDOUT1" class="ch.qos.logback.core.ConsoleAppender">
 		<layout class="ch.qos.logback.classic.PatternLayout">
 			<!-- use converters in the layout pattern -->
			<Pattern>[NOEXCLUDE] %d{HH:mm:ss.SSS} %-5level %logger [%thread:%X{requestId:--}] - %msg%n%hEx</Pattern>
		</layout>
		<!-- rest of your config ... -->
	</appender>

	<appender name="STDOUT2" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<!-- use converters in the layout pattern -->
			<Pattern>[EXCLUSIONS] %d{HH:mm:ss.SSS} %-5level %logger [%thread:%X{requestId:--}] - %msg%n%hEx{^sun\.reflect\..*\.invoke,^com\.sun\.,^sun\.net\.,^net\.sf\.cglib\.proxy\.MethodProxy\.invoke,^org\.junit\.,^org\.apache\.maven\.surefire\.,^java\.lang\.reflect\.Method\.invoke,^java\.util\.concurrent\.ThreadPoolExecutor\.runWorker,^java\.lang\.Thread\.run}</Pattern>
		</layout>
		<!-- rest of your config ... -->
	</appender>

	<!-- the LogstashEncoder from logstash-logback-appender encodes a log event to native Logstash JSON format -->
	<appender name="JSON" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="net.logstash.logback.encoder.LogstashEncoder" >
			<!-- computes and adds a 'stack_hash' field on errors -->
			<provider class="com.orange.common.logging.logback.StackHashJsonProvider"/>
			<!-- enriches the stack trace with unique hash -->
			<throwableConverter class="com.orange.common.logging.logback.CustomThrowableConverterWithHash">
				<!-- generated class names -->
				<exclude>\$\$FastClassByCGLIB\$\$</exclude>
				<exclude>\$\$EnhancerBySpringCGLIB\$\$</exclude>
				<exclude>^sun\.reflect\..*\.invoke</exclude>
				<!-- JDK internals -->
				<exclude>^com\.sun\.</exclude>
				<exclude>^sun\.net\.</exclude>
				<!-- dynamic invocation -->
				<exclude>^net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
				<exclude>^org\.springframework\.cglib\.</exclude>
				<exclude>^org\.springframework\.transaction\.</exclude>
				<exclude>^org\.springframework\.validation\.</exclude>
				<exclude>^org\.springframework\.app\.</exclude>
				<exclude>^org\.springframework\.aop\.</exclude>
				<exclude>^java\.lang\.reflect\.Method\.invoke</exclude>
				<!-- Spring plumbing -->
				<exclude>^org\.springframework\.ws\..*\.invoke</exclude>
				<exclude>^org\.springframework\.ws\.transport\.</exclude>
				<exclude>^org\.springframework\.ws\.soap\.saaj\.SaajSoapMessage\.</exclude>
				<exclude>^org\.springframework\.ws\.client\.core\.WebServiceTemplate\.</exclude>
				<exclude>^org\.springframework\.web\.filter\.</exclude>
				<!-- Tomcat internals -->
				<exclude>^org\.apache\.tomcat\.</exclude>
				<exclude>^org\.apache\.catalina\.</exclude>
				<exclude>^org\.apache\.coyote\.</exclude>
				<exclude>^java\.util\.concurrent\.ThreadPoolExecutor\.runWorker</exclude>
				<exclude>^java\.lang\.Thread\.run$</exclude>
			</throwableConverter>
		</encoder>
	</appender>

	<!-- even simpler with any appender from logstash-logback-appender -->
	<appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashSocketAppender">
		<!-- computes and adds a 'stack_hash' field on errors -->
		<provider class="com.orange.common.logging.logback.StackHashJsonProvider"/>
		<!-- enriches the stack trace with unique hash -->
		<throwableConverter class="com.orange.common.logging.logback.CustomThrowableConverterWithHash">
			<!-- generated class names -->
			<exclude>\$\$FastClassByCGLIB\$\$</exclude>
			<exclude>\$\$EnhancerBySpringCGLIB\$\$</exclude>
			<exclude>^sun\.reflect\..*\.invoke</exclude>
			<!-- JDK internals -->
			<exclude>^com\.sun\.</exclude>
			<exclude>^sun\.net\.</exclude>
			<!-- dynamic invocation -->
			<exclude>^net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
			<exclude>^org\.springframework\.cglib\.</exclude>
			<exclude>^org\.springframework\.transaction\.</exclude>
			<exclude>^org\.springframework\.validation\.</exclude>
			<exclude>^org\.springframework\.app\.</exclude>
			<exclude>^org\.springframework\.aop\.</exclude>
			<exclude>^java\.lang\.reflect\.Method\.invoke</exclude>
			<!-- Spring plumbing -->
			<exclude>^org\.springframework\.ws\..*\.invoke</exclude>
			<exclude>^org\.springframework\.ws\.transport\.</exclude>
			<exclude>^org\.springframework\.ws\.soap\.saaj\.SaajSoapMessage\.</exclude>
			<exclude>^org\.springframework\.ws\.client\.core\.WebServiceTemplate\.</exclude>
			<exclude>^org\.springframework\.web\.filter\.</exclude>
			<!-- Tomcat internals -->
			<exclude>^org\.apache\.tomcat\.</exclude>
			<exclude>^org\.apache\.catalina\.</exclude>
			<exclude>^org\.apache\.coyote\.</exclude>
			<exclude>^java\.util\.concurrent\.ThreadPoolExecutor\.runWorker</exclude>
			<exclude>^java\.lang\.Thread\.run$</exclude>
		</throwableConverter>
		<!-- rest of your config ... -->
	</appender>

	<!-- rest of your config ... -->
	<logger name="com.orange" level="DEBUG" />

	<root level="INFO">
		<appender-ref ref="STDOUT1" />
		<appender-ref ref="STDOUT2" />
		<appender-ref ref="JSON" />
	</root>

</configuration>